// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechProgram2025.Models;

#nullable disable

namespace TechProgram2025.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250403163325_Fix_Insurance_Category_Relations")]
    partial class Fix_Insurance_Category_Relations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContractInsuranceVariant", b =>
                {
                    b.Property<int>("ContractsContractID")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceVariantsInsuranceVariantID")
                        .HasColumnType("int");

                    b.HasKey("ContractsContractID", "InsuranceVariantsInsuranceVariantID");

                    b.HasIndex("InsuranceVariantsInsuranceVariantID");

                    b.ToTable("ContractInsuranceVariant");
                });

            modelBuilder.Entity("TechProgram2025.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TechProgram2025.Models.Contract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"));

                    b.Property<int>("AgentUserID")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<bool>("IsProblematic")
                        .HasColumnType("bit");

                    b.HasKey("ContractID");

                    b.HasIndex("AgentUserID");

                    b.HasIndex("ClientID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("TechProgram2025.Models.InsuranceCategory", b =>
                {
                    b.Property<int>("InsuranceCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceCategoryID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryID")
                        .HasColumnType("int");

                    b.HasKey("InsuranceCategoryID");

                    b.HasIndex("ParentCategoryID");

                    b.ToTable("InsuranceCategories");
                });

            modelBuilder.Entity("TechProgram2025.Models.InsuranceVariant", b =>
                {
                    b.Property<int>("InsuranceVariantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceVariantID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InsuranceVariantID");

                    b.HasIndex("CategoryID");

                    b.ToTable("InsuranceVariants");
                });

            modelBuilder.Entity("TechProgram2025.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContractInsuranceVariant", b =>
                {
                    b.HasOne("TechProgram2025.Models.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractsContractID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechProgram2025.Models.InsuranceVariant", null)
                        .WithMany()
                        .HasForeignKey("InsuranceVariantsInsuranceVariantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechProgram2025.Models.Contract", b =>
                {
                    b.HasOne("TechProgram2025.Models.User", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechProgram2025.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TechProgram2025.Models.InsuranceCategory", b =>
                {
                    b.HasOne("TechProgram2025.Models.InsuranceCategory", "ParentCategory")
                        .WithMany("ChildrenCategories")
                        .HasForeignKey("ParentCategoryID");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("TechProgram2025.Models.InsuranceVariant", b =>
                {
                    b.HasOne("TechProgram2025.Models.InsuranceCategory", "Category")
                        .WithMany("insuranceVariants")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechProgram2025.Models.InsuranceCategory", b =>
                {
                    b.Navigation("ChildrenCategories");

                    b.Navigation("insuranceVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
